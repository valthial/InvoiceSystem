// <auto-generated />
using System;
using InvoiceSystem.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvoiceSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvoiceSystem.Domain.Entities.IssuerCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InvoiceSystem.Domain.Entities.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("IssuerCompanyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CounterPartyCompanyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateIssued")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("VatAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IssuerCompanyId");

                    b.HasIndex("CounterPartyCompanyId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceSystem.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("IssuerCompanyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IssuerCompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvoiceSystem.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("InvoiceSystem.Domain.Entities.IssuerCompany", "IssuerCompany")
                        .WithMany()
                        .HasForeignKey("IssuerCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceSystem.Domain.Entities.IssuerCompany", "CounterPartyCompany")
                        .WithMany()
                        .HasForeignKey("CounterPartyCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IssuerCompany");

                    b.Navigation("CounterPartyCompany");
                });

            modelBuilder.Entity("InvoiceSystem.Domain.Entities.User", b =>
                {
                    b.HasOne("InvoiceSystem.Domain.Entities.IssuerCompany", "IssuerCompany")
                        .WithMany()
                        .HasForeignKey("IssuerCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IssuerCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
